#include <stdio.h>
#include <E101.h>
#include <time.h>

/* using a variable for the standard speed of the motors will make it easier to update the speed used in all the commands if the motor is too fast or slow */
int standardSpeed = 100;

/* Different method for driving forward, no need for a loop. Set motors to standard speed, sleep for duration seconds, stop motors. */
int driveForward(duration){

  set_motor(1, standardSpeed);
  set_motor(2, standardSpeed);
  
  sleep1(duration,000000);
  
  set_motor(1, 0);
  set_motor(2, 0);
  
return 0;
}

/* Applied similar principles to turnLeft and turnRight. This code assumes motor 1 is on the left and motor 2 is on the right. */

int turnLeft(duration) {

  set_motor(1, -standardSpeed);
  set_motor(2, standardSpeed);
  
  sleep1(duration, 000000);
  
  set_motor(1, 0);
  set_motor(2, 0);

return 0;
}

int turnRight(duration) {

  set_motor(1, standardSpeed);
  set_motor(2, -standardSpeed);
  
  sleep1(duration, 000000);
  
  set_motor(1, 0);
  set_motor(2, 0);

return 0;
}

/* This is basically just driveForward with the standard speed set to negative. */
int driveBackward(duration){

  set_motor(1, -standardSpeed);
  set_motor(2, -standardSpeed);
  
  sleep1(duration,000000);
  
  set_motor(1, 0);
  set_motor(2, 0);
  
return 0;
}


/* Didn't change much in detect method other than formatting. */

int detect(duration){

  adc_reading = read_analog(0);
  
  if (adc_reading > 100){
    set_motor(1, -127);
    set_motor(2, 127);
    sleep1(0, 500000);
  }
  
return 0;
}
